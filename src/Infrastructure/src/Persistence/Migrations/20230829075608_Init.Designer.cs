// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Tlis.Cms.ShowManagement.Infrastructure.Persistence;

#nullable disable

namespace Tlis.Cms.ShowManagement.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ShowManagementDbContext))]
    [Migration("20230829075608_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cms_show_management")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Tlis.Cms.ShowManagement.Domain.Entities.Show", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date")
                        .HasColumnName("created_date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<List<Guid>>("ModeratorIds")
                        .IsRequired()
                        .HasColumnType("uuid[]")
                        .HasColumnName("moderator_ids");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_show");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_show_name");

                    b.ToTable("show", "cms_show_management");
                });
#pragma warning restore 612, 618
        }
    }
}
